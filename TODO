[] Separar Profesores de una clase
[] Arreglar a confirmar de los excels
[] Files open all files
[] Separar clases largas (L)
[] Ordenar por hora las materias del inicio
[] Fix disable day on another month color 
[] 


Primary #334e68

"[[174,\"DIN\",\"Ingeniería de Software II\",\"---\",7,\"IIN\",\"-- --\",2008,\"T\",\"TQ\",\"Lic.\\nMs.\",\"Arguello Moreno\\nGonzález Rodas\",\"Claudia Carolina\\nGuillermo Jacobo\",\"Sab 28/03/20\",\"08:00\",null,\"Sab 30/05/20\",\"08:00\",null,\"Sab 20/06/20\",\"08:00\",null,\"Sab 04/07/20\",\"08:00\",null,null,\"14:00 - 16:15\",null,null,null,null,null,null,null,\"16:30 - 19:30\"],[186,\"DCB\",\"Matemática Aplicada\",\"---\",7,\"IIN\",\"-- --\",2008,\"T\",\"TQ\",\"Ms.\",\"Sorensen Cabrera\",\"Gustavo Adolfo\",\"Jue 02/04/20\",0.75,null,\"Jue 04/06/20\",0.75,null,\"Sab 13/06/20\",\"08:00\",null,\"Lun 13/07/20\",0.75,null,null,\"16:30 - 19:30\",null,null,null,null,null,\"17:15 - 19:30\"]]"

​


import { Component, OnInit } from '@angular/core';
import { CalendarComponentOptions, DayConfig, CalendarComponent } from 'ion2-calendar';
import * as moment from "moment";
import { AlertController } from '@ionic/angular';

@Component({
  selector: "app-calendario",
  templateUrl: "./calendario.page.html",
  styleUrls: ["./calendario.page.scss"],
})
export class CalendarioPage implements OnInit {
  date: string;
  type: "string"; // 'string' | 'js-date' | 'moment' | 'time' | 'object'
  diasMarcados: DayConfig[] = [];
  optionsMulti: CalendarComponentOptions = {
    weekdays: ["DOM", "LUN", "MAR", "MIE", "JUE", "VIE", "SAB"],
    from: new Date(2020),
    color: "primary",
    daysConfig: this.diasMarcados
  };
  eventosMes=[];
  currentMes: number;
  mostrarCalendario: boolean;

  constructor(public alertController: AlertController) {
    //Para tener los meses en espanhol
    moment.locale("es-es");

    this.mostrarCalendario = false;

    this.currentMes=7
  }

  ionViewWillEnter() {
    let data = window.localStorage.toCalendar;
    // [{tipo:"",materia:"",fecha:"",hora,""}]
    if(data){
      let datos_a_filtrar = JSON.parse(window.localStorage.toCalendar);

      let x=0;while(x++<13)this.eventosMes.push([])
      console.log(this);

      datos_a_filtrar.forEach(element => {
        
        let tipos = [
          "Primer Parcial",
          "Segundo Parcial",
          "Primer Final",
          "Segundo Final",
        ];
        let keys = ["1p", "2p","1f","2f"]
        for (const key in keys) {
          let index = parseInt(element[keys[key]].dia.split("/")[1]);
          this.eventosMes[index].push({
            tipo: tipos[key],
            materia: element["asignatura"],
            fecha: element[keys[key]].dia,
            hora: element[keys[key]].hora
          });
          marcarDia(this.diasMarcados, element[keys[key]].dia);
        }
      });

      delete window.localStorage['toCalendar'];
      window.localStorage['eventosMes'] = JSON.stringify(this.eventosMes);
      window.localStorage['diasMarcados'] = JSON.stringify(this.diasMarcados);
    } else {
      let eventosMes = window.localStorage.getItem("eventosMes");
      let diasMarcados = window.localStorage.getItem("diasMarcados");
      if (eventosMes) {
        console.log(this.diasMarcados);
        console.log('josn diasMarcados', JSON.parse(diasMarcados));
        
        
        this.eventosMes = JSON.parse(eventosMes);
        this.diasMarcados = JSON.parse(diasMarcados);
        console.log('this', this.diasMarcados);
        
      }
    }
    this.optionsMulti["daysConfig"] = this.diasMarcados;
    this.mostrarCalendario = true;
    console.log(this.optionsMulti);
    

    // Marcar dias
    function marcarDia(array,fecha: string) {
      console.log('fecha',fecha);
      
      let dia = parseInt(fecha[4] + fecha[5])
      let mes = parseInt(fecha[7] + fecha[8])
      let anho = parseInt("20"+fecha[10] + fecha[11])
      array.push({
        date: new Date(anho, mes - 1, dia),
        marked: true,
        cssClass: "markedDay",
      });
      
    }

  }

  monthChange(e){
    console.log(e);
    this.currentMes = e.newMonth.months;
    console.log();
    
  }

  onChange($event) {
    let fecha: Date = $event._d
    let day =  fecha.getDate()<10 ? "0"+fecha.getDate() : fecha.getDate().toString();
    let month = (fecha.getMonth()+1) < 10 ? "0" + (fecha.getMonth()+1) :( fecha.getMonth()+1).toString();
    let year = fecha.getFullYear().toString().substr(2,3)
    let fechaFormateada =`${day}/${month}/${year}`;
    console.log(fechaFormateada);
    console.log('da',this.eventosMes);
    
    let eventosPorMostrar=[]
    let toAlert =""
    let nroEventos=0;
    this.eventosMes[fecha.getMonth()+1].forEach(element => {
      if (element.fecha.includes(fechaFormateada)) {
        eventosPorMostrar.push(element);
        toAlert=toAlert+`
          <ion-item ion-no-padding style="background:var(--ion-overlay-background-color, var(--ion-color-step-100, #f9f9f9));">  
            <ion-label class="ion-no-padding ion-text-wrap">
              <p>${element.hora}</p>
              <h2>${element.tipo}</h2>
              <p>${element.materia}</p>
            </ion-label>
          </ion-item>
        `
        nroEventos++;
      }
    });
    // class="ion-text-right"
    let header = `Evento${nroEventos == 1 ?'':'s'} en fecha: `+fechaFormateada
    if(nroEventos)
      this.presentAlert(header, toAlert)
    console.log(eventosPorMostrar);
    

    

    console.log($event);
  }

  async presentAlert(header,message) {
    const alert = await this.alertController.create({
      cssClass: 'my-custom-class',
      header: header,
      message: `
      <ion-list class="ion-no-padding-top" lines="none" >
        ${message}
      </ion-list>
      
      `,
      buttons: ['OK']
    });

    await alert.present();
  }

  ngOnInit() {}
}